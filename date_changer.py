'''
Grade 1. Этап 1: Задание 2
Задание 2 .

Описание задачи

Даты могут быть представлены в разных форматах, допустим, 19 марта 2024 различными способами: 19-03-2024, 19.03.24, 19:03:24, 03-19-2024 и даже 19-Mar-2024. Способов может быть бесконечное множество, лишь бы пользователь понимал, о какой дате идет речь, или, если дата хранится в базе данных, то все даты были согласованы между собой и имели один формат.

Представим, что появилась задача избавиться от года при выводе created_date и issue_date, чаще всего пользователь понимает на какой год поставлена задача, а так дата будет выглядеть лаконичнее и аккуратнее.

Однако дата в нашей базе данных (в данном случае это наши переменные) все еще должна иметь изначальный формат, важно изменить лишь представление даты при выводе для пользователя через print(). При необходимости можете воспользоваться временной переменной temp_issue_date и temp_created_date, для хранения изменённых дат и последующем выводе их на печать, либо можете изменять данные напрямую в print.

Это задача, с которой в будущей практике разработки Вам придется сталкиваться часто, когда данные хранятся в одном виде, чтобы иметь полную информацию о каком-то объекте, а пользователю показываются в другом, для лаконичности. Например, хранить полное ФИО, а показывать пользователю только инициалы.

Формат сдачи задания
Добавьте в Ваш репозиторий note_manager файл date_changer.py, который и будет содержать решение задачи
'''

created_date = input('Введите дату создания заметки (в формате ДД.ММ.ГГГГ): ')
print ("Дата создания заметки:", created_date[0:5])
issue_date = input('Введите дату истечения заметки - дедлайн ( формате ДД.ММ.ГГГГ): ')
print ("Дата истечения заметки (дедлайн):", issue_date[0:5])